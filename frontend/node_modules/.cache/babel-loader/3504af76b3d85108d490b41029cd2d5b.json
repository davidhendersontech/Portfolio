{"ast":null,"code":"var _jsxFileName = \"/home/david/Devolopment/Flatiron/phase5/playground/tailwind-practice/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  match\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('');\n  const [uploadDate, setUploadDate] = useState('');\n  useEffect(() => {\n    const postId = match.params.postid;\n    fetch(`http://localhost:3001/posts/${postId}`).then(response => response.json()).then(post => {\n      setTitle(post.title);\n      setBody(post.body);\n      setAuthor(post.author);\n      const formattedDate = formatDate(post.updated_at);\n      setUploadDate(post.updated_at);\n    });\n  }, [match]);\n\n  const formatDate = date => {\n    const newDate = new Date(date);\n    console.log(newDate.toDateString());\n    console.log('year', year, 'month', month, 'day', day);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow w-auto border-blue flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold text-3xl\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-700 text-xs font-bold\",\n        children: [\" last updated at: \", uploadDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"zIKgjh2/26z3p4ilyreYB9RleYo=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/david/Devolopment/Flatiron/phase5/playground/tailwind-practice/src/components/Post.js"],"names":["React","useState","useEffect","Post","match","title","setTitle","body","setBody","author","setAuthor","uploadDate","setUploadDate","postId","params","postid","fetch","then","response","json","post","formattedDate","formatDate","updated_at","date","newDate","Date","console","log","toDateString","year","month","day"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAAA;;AAEtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,MAAM,GAAGT,KAAK,CAACU,MAAN,CAAaC,MAA5B;AACAC,IAAAA,KAAK,CAAE,+BAA8BH,MAAO,EAAvC,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZd,MAAAA,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;AACAG,MAAAA,OAAO,CAACY,IAAI,CAACb,IAAN,CAAP;AACAG,MAAAA,SAAS,CAACU,IAAI,CAACX,MAAN,CAAT;AACA,YAAMY,aAAa,GAAGC,UAAU,CAACF,IAAI,CAACG,UAAN,CAAhC;AACAX,MAAAA,aAAa,CAACQ,IAAI,CAACG,UAAN,CAAb;AACD,KARH;AASD,GAXQ,EAWN,CAACnB,KAAD,CAXM,CAAT;;AAaA,QAAMkB,UAAU,GAAIE,IAAD,IAAU;AAC3B,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAhB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,YAAR,EAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB,EAA0B,OAA1B,EAAmCC,KAAnC,EAA0C,KAA1C,EAAiDC,GAAjD;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA,kBAAsC3B;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,iCAAhB;AAAA,yCAAqEM,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCuBJ,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\nexport default function Post({ match }) {\n\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [author, setAuthor] = useState('')\n  const [uploadDate, setUploadDate] = useState('')\n\n  useEffect(() => {\n    const postId = match.params.postid\n    fetch(`http://localhost:3001/posts/${postId}`)\n      .then(response => response.json())\n      .then(post => {\n        setTitle(post.title)\n        setBody(post.body)\n        setAuthor(post.author)\n        const formattedDate = formatDate(post.updated_at)\n        setUploadDate(post.updated_at)\n      })\n  }, [match])\n\n  const formatDate = (date) => {\n    const newDate = new Date(date)\n\n    console.log(newDate.toDateString())\n    console.log('year', year, 'month', month, 'day', day)\n  }\n\n  return (\n    <div className=\"shadow w-auto border-blue flex flex-col\">\n      <div className=\"flex-row\">\n        <span className=\"font-bold text-3xl\">{title}</span>\n        <span className=\"text-gray-700 text-xs font-bold\"> last updated at: {uploadDate}</span>\n      </div>\n\n      <span>{body}</span>\n      {/* TODO: fetch call using blog id to grab blog body and title */}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}